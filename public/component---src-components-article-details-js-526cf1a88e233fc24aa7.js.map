{"version":3,"file":"component---src-components-article-details-js-526cf1a88e233fc24aa7.js","mappings":"qNAkBMA,EAAW,CACf,SAAS,UACT,SAAS,uBACT,OAAS,mBACT,OAAS,aACT,OAAS,QACT,SAAS,cACT,OAAS,0BACT,OAAS,wBACT,SAAS,SA+EX,UA3EuB,YAAe,IAAZC,EAAW,EAAXA,KAElBC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,KAAKC,MAAM,QAAQ,GAAK,GAEpF,GAA4CC,EAAAA,EAAAA,UAAS,MAA9CC,EAAP,KAAuBC,EAAvB,KACIC,EAAYR,EAAIS,MAAMT,EAAIU,QAAQ,YAAc,GAEZ,MAApCF,EAAUA,EAAUG,OAAS,KAC/BH,EAAYA,EAAUC,MAAM,EAAGD,EAAUG,OAAS,IAGpD,IAAMC,EAAW,GA6BjB,OA3BAC,EAAAA,EAAAA,YAAU,WACRZ,OAAOa,SAAS,EAAG,EACpB,GAAE,CAACN,KAEJK,EAAAA,EAAAA,YAAU,YACR,iBAAC,sFAEGd,EAAKgB,kBAAkBC,MAAMC,KAAI,SAAAC,GAAO,OACtCN,EAASO,KAAKD,EAAQE,KAAKC,YADW,IAKtCC,EAAU,CAAC,EACNC,EAAI,EARd,YAQiBA,EAAIX,EAASD,QAR9B,oBASGa,QAAQC,IAAIb,EAASW,IACjBX,EAASW,GAAGG,KAAKjB,MAAM,MAAQD,EAVtC,uBAWKI,EAASW,GAAT,KAAsBxB,EAAKgB,kBAAkBC,MAAMO,GAAGH,KAAKO,KAE3DL,EAAO,SAAe,CAACV,EAASW,IAbrC,4BAQsCA,IARtC,uBAiBCC,QAAQC,KAAIG,EAAAA,EAAAA,IAAqBN,IACjCf,GAAkBqB,EAAAA,EAAAA,IAAqBN,IAlBxC,2CAAD,EAoBD,GAAE,CAACd,IAEIF,EACN,gCACE,gBAAC,IAAD,CAAKuB,IAAG,iBACHC,EAAAA,EAAAA,eAAAA,IADG,CAENC,MAAM,oBAAoBC,EAAAA,EAAAA,IAAa1B,GACvC2B,OAAOC,EAAAA,EAAAA,IAAa5B,GACpBN,IAAAA,MAEF,4BACE,gBAAC,IAAD,MACA,uBAAKmC,UAAU,kBACb,uBAAKA,UAAU,iBACb,uBAAKA,UAAS,aAAcC,EAAAA,EAAAA,IAAe9B,KAC3C,4BAAOR,GAASsC,EAAAA,EAAAA,IAAe9B,MAGjC,uBAAK6B,UAAU,OACb,uBACEE,IAA+C,iBAAlCH,EAAAA,EAAAA,IAAa5B,IAAiC4B,EAAAA,EAAAA,IAAa5B,IAAkB4B,EAAAA,EAAAA,IAAa5B,GAAgBgC,QACvHC,IAAG,mBAAoBP,EAAAA,EAAAA,IAAa1B,KAEtC,uBAAK6B,UAAU,WACb,2BAAKH,EAAAA,EAAAA,IAAa1B,IAClB,0BAAIkC,EAAAA,EAAAA,IAAmBlC,MAG3B,gBAAC,IAAD,CAAU6B,UAAU,YAAWM,EAAAA,EAAAA,IAAgBnC,IAC/C,2BACA,4GAGA,IAET,C","sources":["webpack://steam-project/./src/components/articleDetails.js"],"sourcesContent":["//Import React dependencies\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Markdown from \"markdown-to-jsx\";\r\n\r\n//Importing constants\r\nimport _ from \"./../constants/constants\";\r\n\r\n//Importing components\r\nimport SEO from \"./seo\";\r\nimport Navbar from \"./navbar\";\r\n\r\n//Importing helpers\r\nimport {ArticleDescription, ArticleDetailsMapper, ArticleImage, ArticleIssue, ArticleMarkdown, ArticleSubject, ArticleTitle} from './articleHelperFunctions';\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport \"./../styles/index.scss\";\r\n\r\nconst subjects = {\r\n  '2BB760': `Biochem`,\r\n  '9C2111': `Physics & Technology`,\r\n  'BFAA34': `Econ &  Business`,\r\n  'C8792C': `Humanities`,\r\n  '622058': `Music`,\r\n  '376B70': `Art & Media`,\r\n  'AF70BD': `Literature & Philosophy`,\r\n  'CDCEED': `Politics & Philosophy`,\r\n  '3E5FCA': `Maths`,\r\n}\r\n\r\n\r\nconst ArticleDetails = ({ data }) => {\r\n\r\n  const url = typeof window !== 'undefined' ? window.location.href.split(/[?#]/)[0] : '';\r\n\r\n  const [ArticleDetails, setArticleDetails] = useState(null);\r\n  let articleId = url.slice(url.indexOf(\"articles\") + 9);\r\n\r\n  if (articleId[articleId.length - 1] === '/') {\r\n    articleId = articleId.slice(0, articleId.length - 1);\r\n  }\r\n\r\n  const articles = [];\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [articleId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      {\r\n        data.allMarkdownRemark.edges.map(article => (\r\n          articles.push(article.node.frontmatter)\r\n        ))\r\n      }\r\n\r\n      var Article = {};\r\n      for (var i = 0; i < articles.length; i++) {\r\n        console.log(articles[i])\r\n        if (articles[i].slug.slice(10) === articleId) {\r\n          articles[i][\"html\"] = data.allMarkdownRemark.edges[i].node.html;\r\n\r\n          Article[\"articles\"] = [articles[i]];\r\n          break;\r\n        }\r\n      }\r\n      console.log(ArticleDetailsMapper(Article))\r\n      setArticleDetails(ArticleDetailsMapper(Article));\r\n    })();\r\n  }, [articleId]);\r\n\r\n  return (ArticleDetails ?\r\n    <>\r\n      <SEO seo={{\r\n        ..._.ArticleDetails.SEO,\r\n        title: `STEAM Project | ${ArticleTitle(ArticleDetails)}`,\r\n        image: ArticleImage(ArticleDetails),\r\n        url\r\n      }} />\r\n      <main>\r\n        <Navbar />\r\n        <div className=\"articleDetails\">\r\n          <div className=\"subject-hover\">\r\n            <div className={`circle bg${ArticleSubject(ArticleDetails)}`}></div>\r\n            <p>{`${subjects[ArticleSubject(ArticleDetails)]}`}</p>\r\n          </div>\r\n\r\n          <div className=\"top\">\r\n            <img \r\n              src={(typeof(ArticleImage(ArticleDetails)) === \"string\") ? ArticleImage(ArticleDetails) : ArticleImage(ArticleDetails).default} \r\n              alt={`Cover image of ${ArticleTitle(ArticleDetails)}`}>\r\n            </img>\r\n            <div className=\"details\">\r\n              <h1>{ArticleTitle(ArticleDetails)}</h1> \r\n              <p>{ArticleDescription(ArticleDetails)}</p>\r\n            </div>\r\n          </div>\r\n          <Markdown className=\"content\">{ArticleMarkdown(ArticleDetails)}</Markdown>\r\n          <br />\r\n          <p>Content to add: Author stuff, name, image?, potentially their other articles</p>\r\n        </div>\r\n      </main>\r\n    </> : null\r\n  );\r\n};\r\n\r\nexport default ArticleDetails;\r\nexport const pageQuery = graphql`\r\n  query articleQuery1 {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      filter: { frontmatter: { type: { eq: \"Article\" } } }\r\n    ){\r\n      edges{\r\n        node{\r\n          html\r\n          frontmatter {\r\n            title\r\n            description\r\n            subject\r\n            issue\r\n            slug\r\n            preview_image\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["subjects","data","url","window","location","href","split","useState","ArticleDetails","setArticleDetails","articleId","slice","indexOf","length","articles","useEffect","scrollTo","allMarkdownRemark","edges","map","article","push","node","frontmatter","Article","i","console","log","slug","html","ArticleDetailsMapper","seo","_","title","ArticleTitle","image","ArticleImage","className","ArticleSubject","src","default","alt","ArticleDescription","ArticleMarkdown"],"sourceRoot":""}