{"version":3,"file":"f5c38f40ad575d9d583a827750e64197242a23aa-849baba37ed62b550711.js","mappings":"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","sources":["webpack://steam-project/./node_modules/turndown/lib/turndown.browser.es.js"],"sourcesContent":["function extend(destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n\n  return destination;\n}\n\nfunction repeat(character, count) {\n  return Array(count + 1).join(character);\n}\n\nfunction trimLeadingNewlines(string) {\n  return string.replace(/^\\n*/, '');\n}\n\nfunction trimTrailingNewlines(string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') {\n    indexEnd--;\n  }\n\n  return string.substring(0, indexEnd);\n}\n\nvar blockElements = ['ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS', 'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER', 'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES', 'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD', 'TFOOT', 'TH', 'THEAD', 'TR', 'UL'];\n\nfunction isBlock(node) {\n  return is(node, blockElements);\n}\n\nvar voidElements = ['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\n\nfunction isVoid(node) {\n  return is(node, voidElements);\n}\n\nfunction hasVoid(node) {\n  return has(node, voidElements);\n}\n\nvar meaningfulWhenBlankElements = ['A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'];\n\nfunction isMeaningfulWhenBlank(node) {\n  return is(node, meaningfulWhenBlankElements);\n}\n\nfunction hasMeaningfulWhenBlank(node) {\n  return has(node, meaningfulWhenBlankElements);\n}\n\nfunction is(node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0;\n}\n\nfunction has(node, tagNames) {\n  return node.getElementsByTagName && tagNames.some(function (tagName) {\n    return node.getElementsByTagName(tagName).length;\n  });\n}\n\nvar rules = {};\nrules.paragraph = {\n  filter: 'p',\n  replacement: function replacement(content) {\n    return '\\n\\n' + content + '\\n\\n';\n  }\n};\nrules.lineBreak = {\n  filter: 'br',\n  replacement: function replacement(content, node, options) {\n    return options.br + '\\n';\n  }\n};\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  replacement: function replacement(content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat(hLevel === 1 ? '=' : '-', content.length);\n      return '\\n\\n' + content + '\\n' + underline + '\\n\\n';\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n';\n    }\n  }\n};\nrules.blockquote = {\n  filter: 'blockquote',\n  replacement: function replacement(content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n';\n  }\n};\nrules.list = {\n  filter: ['ul', 'ol'],\n  replacement: function replacement(content, node) {\n    var parent = node.parentNode;\n\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content;\n    } else {\n      return '\\n\\n' + content + '\\n\\n';\n    }\n  }\n};\nrules.listItem = {\n  filter: 'li',\n  replacement: function replacement(content, node, options) {\n    content = content.replace(/^\\n+/, '') // remove leading newlines\n    .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n    .replace(/\\n/gm, '\\n    '); // indent\n\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n\n    return prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '');\n  }\n};\nrules.indentedCodeBlock = {\n  filter: function filter(node, options) {\n    return options.codeBlockStyle === 'indented' && node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n  },\n  replacement: function replacement(content, node, options) {\n    return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n';\n  }\n};\nrules.fencedCodeBlock = {\n  filter: function filter(node, options) {\n    return options.codeBlockStyle === 'fenced' && node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n  },\n  replacement: function replacement(content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n    var match;\n\n    while (match = fenceInCodeRegex.exec(code)) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n    return '\\n\\n' + fence + language + '\\n' + code.replace(/\\n$/, '') + '\\n' + fence + '\\n\\n';\n  }\n};\nrules.horizontalRule = {\n  filter: 'hr',\n  replacement: function replacement(content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n';\n  }\n};\nrules.inlineLink = {\n  filter: function filter(node, options) {\n    return options.linkStyle === 'inlined' && node.nodeName === 'A' && node.getAttribute('href');\n  },\n  replacement: function replacement(content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')';\n  }\n};\nrules.referenceLink = {\n  filter: function filter(node, options) {\n    return options.linkStyle === 'referenced' && node.nodeName === 'A' && node.getAttribute('href');\n  },\n  replacement: function replacement(content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break;\n\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break;\n\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement;\n  },\n  references: [],\n  append: function append(options) {\n    var references = '';\n\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n\n    return references;\n  }\n};\nrules.emphasis = {\n  filter: ['em', 'i'],\n  replacement: function replacement(content, node, options) {\n    if (!content.trim()) return '';\n    return options.emDelimiter + content + options.emDelimiter;\n  }\n};\nrules.strong = {\n  filter: ['strong', 'b'],\n  replacement: function replacement(content, node, options) {\n    if (!content.trim()) return '';\n    return options.strongDelimiter + content + options.strongDelimiter;\n  }\n};\nrules.code = {\n  filter: function filter(node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n    return node.nodeName === 'CODE' && !isCodeBlock;\n  },\n  replacement: function replacement(content) {\n    if (!content) return '';\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n\n    while (matches.indexOf(delimiter) !== -1) {\n      delimiter = delimiter + '`';\n    }\n\n    return delimiter + extraSpace + content + extraSpace + delimiter;\n  }\n};\nrules.image = {\n  filter: 'img',\n  replacement: function replacement(content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n  }\n};\n\nfunction cleanAttribute(attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : '';\n}\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\n\nfunction Rules(options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n  this.keepReplacement = options.keepReplacement;\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n  this.array = [];\n\n  for (var key in options.rules) {\n    this.array.push(options.rules[key]);\n  }\n}\n\nRules.prototype = {\n  add: function add(key, rule) {\n    this.array.unshift(rule);\n  },\n  keep: function keep(filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n  remove: function remove(filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function replacement() {\n        return '';\n      }\n    });\n  },\n  forNode: function forNode(node) {\n    if (node.isBlank) return this.blankRule;\n    var rule;\n    if (rule = findRule(this.array, node, this.options)) return rule;\n    if (rule = findRule(this._keep, node, this.options)) return rule;\n    if (rule = findRule(this._remove, node, this.options)) return rule;\n    return this.defaultRule;\n  },\n  forEach: function forEach(fn) {\n    for (var i = 0; i < this.array.length; i++) {\n      fn(this.array[i], i);\n    }\n  }\n};\n\nfunction findRule(rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule;\n  }\n\n  return void 0;\n}\n\nfunction filterValue(rule, node, options) {\n  var filter = rule.filter;\n\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true;\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true;\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true;\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function');\n  }\n}\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\n\n\nfunction collapseWhitespace(options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE';\n  };\n\n  if (!element.firstChild || isPre(element)) return;\n  var prevText = null;\n  var keepLeadingWs = false;\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) {\n      // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) && !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      } // `text` might be empty at this point.\n\n\n      if (!text) {\n        node = remove(node);\n        continue;\n      }\n\n      node.data = text;\n      prevText = node;\n    } else if (node.nodeType === 1) {\n      // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue;\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\n\n\nfunction remove(node) {\n  var next = node.nextSibling || node.parentNode;\n  node.parentNode.removeChild(node);\n  return next;\n}\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\n\n\nfunction next(prev, current, isPre) {\n  if (prev && prev.parentNode === current || isPre(current)) {\n    return current.nextSibling || current.parentNode;\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode;\n}\n/*\n * Set up window for Node.js\n */\n\n\nvar root = typeof window !== 'undefined' ? window : {};\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively() {\n  var Parser = root.DOMParser;\n  var canParse = false; // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse;\n}\n\nfunction createHTMLParser() {\n  var Parser = function Parser() {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n      };\n    }\n  }\n  return Parser;\n}\n\nfunction shouldUseActiveX() {\n  var useActiveX = false;\n\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n\n  return useActiveX;\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode(input, options) {\n  var root;\n\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString( // DOM parsers arrange elements in the <head> and <body>.\n    // Wrapping in a custom element ensures elements are reliably arranged in\n    // a single element.\n    '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>', 'text/html');\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n  return root;\n}\n\nvar _htmlParser;\n\nfunction htmlParser() {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser;\n}\n\nfunction isPreOrCode(node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE';\n}\n\nfunction Node(node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node;\n}\n\nfunction isBlank(node) {\n  return !isVoid(node) && !isMeaningfulWhenBlank(node) && /^\\s*$/i.test(node.textContent) && !hasVoid(node) && !hasMeaningfulWhenBlank(node);\n}\n\nfunction flankingWhitespace(node, options) {\n  if (node.isBlock || options.preformattedCode && node.isCode) {\n    return {\n      leading: '',\n      trailing: ''\n    };\n  }\n\n  var edges = edgeWhitespace(node.textContent); // abandon leading ASCII WS if left-flanked by ASCII WS\n\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  } // abandon trailing ASCII WS if right-flanked by ASCII WS\n\n\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return {\n    leading: edges.leading,\n    trailing: edges.trailing\n  };\n}\n\nfunction edgeWhitespace(string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))[\\s\\S]*?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1],\n    // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4],\n    // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  };\n}\n\nfunction isFlankedByWhitespace(side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n\n  return isFlanked;\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [[/\\\\/g, '\\\\\\\\'], [/\\*/g, '\\\\*'], [/^-/g, '\\\\-'], [/^\\+ /g, '\\\\+ '], [/^(=+)/g, '\\\\$1'], [/^(#{1,6}) /g, '\\\\$1 '], [/`/g, '\\\\`'], [/^~~~/g, '\\\\~~~'], [/\\[/g, '\\\\['], [/\\]/g, '\\\\]'], [/^>/g, '\\\\>'], [/_/g, '\\\\_'], [/^(\\d+)\\. /g, '$1\\\\. ']];\n\nfunction TurndownService(options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options);\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function blankReplacement(content, node) {\n      return node.isBlock ? '\\n\\n' : '';\n    },\n    keepReplacement: function keepReplacement(content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML;\n    },\n    defaultReplacement: function defaultReplacement(content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content;\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n  turndown: function turndown(input) {\n    if (!canConvert(input)) {\n      throw new TypeError(input + ' is not a string, or an element/document/fragment node.');\n    }\n\n    if (input === '') return '';\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output);\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n  use: function use(plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) {\n        this.use(plugin[i]);\n      }\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions');\n    }\n\n    return this;\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n  addRule: function addRule(key, rule) {\n    this.rules.add(key, rule);\n    return this;\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n  keep: function keep(filter) {\n    this.rules.keep(filter);\n    return this;\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n  remove: function remove(filter) {\n    this.rules.remove(filter);\n    return this;\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n  escape: function escape(string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1]);\n    }, string);\n  }\n};\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process(parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n    var replacement = '';\n\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement);\n  }, '');\n}\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\n\nfunction postProcess(output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '');\n}\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\n\nfunction replacementForNode(node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return whitespace.leading + rule.replacement(content, node, this.options) + whitespace.trailing;\n}\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\n\nfunction join(output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n  return s1 + separator + s2;\n}\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\n\nfunction canConvert(input) {\n  return input != null && (typeof input === 'string' || input.nodeType && (input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11));\n}\n\nexport default TurndownService;"],"names":["repeat","character","count","Array","join","blockElements","isBlock","node","is","voidElements","isVoid","meaningfulWhenBlankElements","tagNames","indexOf","nodeName","has","getElementsByTagName","some","tagName","length","rules","cleanAttribute","attribute","replace","Rules","options","key","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","push","findRule","i","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","remove","next","nextSibling","parentNode","removeChild","prev","current","isPre","firstChild","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","index","prototype","children","test","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","title","referenceLink","reference","linkReferenceStyle","id","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","delimiter","matches","image","alt","src","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","Parser","_htmlParser","HTMLParser","DOMParser","canParse","parseFromString","e","canParseHTMLNatively","useActiveX","document","implementation","createHTMLDocument","open","ActiveXObject","shouldUseActiveX","string","doc","designMode","write","close","RootNode","input","getElementById","cloneNode","element","prevText","keepLeadingWs","nodeType","text","data","substr","nextNode","collapseWhitespace","preformattedCode","isPreOrCode","Node","isCode","isMeaningfulWhenBlank","hasVoid","hasMeaningfulWhenBlank","flankingWhitespace","leading","trailing","edges","m","leadingAscii","leadingNonAscii","trailingNonAscii","trailingAscii","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","destination","arguments","source","hasOwnProperty","extend","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","indexEnd","substring","trimTrailingNewlines","s2","nls","Math","max","turndown","canConvert","use","plugin","addRule","accumulator"],"sourceRoot":""}