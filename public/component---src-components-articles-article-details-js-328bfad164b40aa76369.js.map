{"version":3,"file":"component---src-components-articles-article-details-js-328bfad164b40aa76369.js","mappings":"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","sources":["webpack://asteria/./src/components/articles/articleDetails.js"],"sourcesContent":["//Import React dependencies\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Markdown from \"markdown-to-jsx\";\r\n\r\n//Importing constants\r\nimport _ from \"./../../constants/constants\";\r\n\r\n//Importing components\r\nimport SEO from \"./../seo\";\r\nimport Navbar from \"./../navbar\";\r\nimport Footer from \"./../footer\";\r\n\r\n//Importing helpers\r\nimport {\r\n  ArticleDescription, ArticleDetailsMapper, ArticleImage, ArticleMarkdown, ArticleSubject, ArticleTitle, VideoURL, VideoTitle,\r\n  AuthorNames, AuthorLinkTos, AuthorImages, AuthorPronouns\r\n} from './articleHelperFunctions';\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport \"./../../styles/index.scss\";\r\n\r\nconst subjects = {\r\n  '2BB760': `Biochem`,\r\n  '9C2111': `Physics & Technology`,\r\n  'BFAA34': `Econ &  Business`,\r\n  'C8792C': `Humanities`,\r\n  '622058': `Music`,\r\n  '376B70': `Art & Media`,\r\n  'AF70BD': `Literature & Philosophy`,\r\n  'ACADED': `Politics & Philosophy`,\r\n  '3E5FCA': `Maths`,\r\n}\r\n\r\n\r\nconst ArticleDetails = ({ data }) => {\r\n\r\n  const url = typeof window !== 'undefined' ? window.location.href.split(/[?#]/)[0] : '';\r\n\r\n  const [ArticleDetails, setArticleDetails] = useState(null);\r\n  let articleId = url.slice(url.indexOf(\"articles\") + 9);\r\n\r\n  if (articleId[articleId.length - 1] === '/') {\r\n    articleId = articleId.slice(0, articleId.length - 1);\r\n  }\r\n\r\n  const articles = [];\r\n  const authors = {};\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [articleId]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      {\r\n        data.allMarkdownRemark.edges.forEach((info, index) => {\r\n          info = info.node.frontmatter;\r\n\r\n          if (info.type === \"Article\") {\r\n            articles.push({...info, index});\r\n          } else {\r\n            authors[info.userID] = info;\r\n          }\r\n        })\r\n\r\n        articles.forEach(article => {\r\n          const authorList = [];\r\n          article.userIDs.forEach(ID => {\r\n            authorList.push(authors[ID])\r\n          })\r\n          article.authors = authorList;\r\n        })\r\n      }\r\n\r\n      const Article = {};\r\n      for (let i = 0; i < articles.length; i++) {\r\n        if (articles[i].slug.slice(10) === articleId) {\r\n          articles[i][\"html\"] = data.allMarkdownRemark.edges[articles[i].index].node.html;\r\n\r\n          Article[\"articles\"] = [articles[i]];\r\n          break;\r\n        }\r\n      }\r\n\r\n      setArticleDetails(ArticleDetailsMapper(Article));\r\n    })();\r\n  }, [articleId]);\r\n\r\n  const changePage = () => {\r\n    window.localStorage.setItem('hash', ArticleSubject(ArticleDetails))\r\n  }\r\n\r\n  const image = () => (typeof(ArticleImage(ArticleDetails)) === \"string\") ? ArticleImage(ArticleDetails) : ArticleImage(ArticleDetails).default;\r\n\r\n  const authorImages = () => {\r\n    const result = [];\r\n    for (let i = 0; i < AuthorNames(ArticleDetails).length; i++) {\r\n      result.push(<a className=\"authorImg\" href={AuthorLinkTos(ArticleDetails)[i]}>\r\n        <img\r\n          src={(typeof (AuthorImages(ArticleDetails)[i]) === \"string\") ? AuthorImages(ArticleDetails)[i] : AuthorImages(ArticleDetails)[i].default}\r\n          alt={`Profile picture of ${AuthorNames(ArticleDetails)[i]}`}\r\n        ></img>\r\n      </a>)\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const authorLinks = () => {\r\n    const result = [];\r\n    for (let i = 0; i < AuthorNames(ArticleDetails).length; i++) {\r\n      result.push(<div className=\"authorDetails\">\r\n        <a className=\"name\" href={AuthorLinkTos(ArticleDetails)[i]}>{AuthorNames(ArticleDetails)[i]}</a><br />\r\n        <a className=\"pronouns\" href={AuthorLinkTos(ArticleDetails)[i]}>{AuthorPronouns(ArticleDetails)[i]}</a>\r\n      </div>)\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const displayVideo = () => {\r\n    const Video = {URL: VideoURL(ArticleDetails), Title: VideoTitle(ArticleDetails)}\r\n\r\n    if (Video.URL !== null) {\r\n      return <div className=\"video_container\">\r\n        <iframe\r\n          src={Video.URL}\r\n          title={Video.Title}\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n          frameBorder=\"0\"\r\n          webkitallowfullscreen=\"true\"\r\n          mozallowfullscreen=\"true\"\r\n          allowFullScreen\r\n        />\r\n      </div>\r\n    }\r\n  }\r\n\r\n  return (ArticleDetails ?\r\n    <>\r\n      <SEO seo={{\r\n        ..._.ArticleDetails.SEO,\r\n        title: `Asteria | ${ArticleTitle(ArticleDetails)}`,\r\n        image: ArticleImage(ArticleDetails),\r\n        url\r\n      }} />\r\n      <main>\r\n        <Navbar />\r\n        <div className=\"coverImage\" style={{'backgroundImage': `url('${image()}')`}}></div>\r\n        <div className=\"articleDetails\">\r\n          <a className={`subject-hover bg${ArticleSubject(ArticleDetails)}-light`} href={`/categories`} onClick={changePage}>\r\n            <p>{`${subjects[ArticleSubject(ArticleDetails)]}`}</p>\r\n          </a>\r\n\r\n          <div className=\"top\">\r\n            <div className=\"authorImages\">{authorImages()}</div>\r\n           \r\n            <div className=\"details\">\r\n              <h1>{ArticleTitle(ArticleDetails)}</h1> \r\n              <p>{ArticleDescription(ArticleDetails)}</p>\r\n              {authorLinks()}\r\n            </div>\r\n          </div>\r\n          <Markdown className=\"content\">{ArticleMarkdown(ArticleDetails)}</Markdown>\r\n          {displayVideo()}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </> : null\r\n  );\r\n};\r\n\r\nexport default ArticleDetails;\r\nexport const pageQuery = graphql`\r\n  query articleQuery1 {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          html\r\n          frontmatter {\r\n            type\r\n            title\r\n            description\r\n            subject\r\n            issue\r\n            slug\r\n            preview_image\r\n            userIDs\r\n            first_name\r\n            surname\r\n            pronouns\r\n            school\r\n            profile_picture\r\n            video_url\r\n            video_title\r\n            userID\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\n/*\r\n<main>\r\n        <Navbar />\r\n        <div className=\"articleDetails\">\r\n          <a className={`subject-hover bg${ArticleSubject(ArticleDetails)}-light`} href={`/categories`} onClick={changePage}>\r\n            <p>{`${subjects[ArticleSubject(ArticleDetails)]}`}</p>\r\n          </a>\r\n\r\n          <div className=\"top\">\r\n            <img \r\n              src={(typeof(ArticleImage(ArticleDetails)) === \"string\") ? ArticleImage(ArticleDetails) : ArticleImage(ArticleDetails).default} \r\n              alt={`Cover image of ${ArticleTitle(ArticleDetails)}`}>\r\n            </img>\r\n            <div className=\"details\">\r\n              <h1>{ArticleTitle(ArticleDetails)}</h1> \r\n              <p>{ArticleDescription(ArticleDetails)}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <a href={AuthorLinkTo(ArticleDetails)} className=\"author\">\r\n            <div className=\"authorDetails\">\r\n              <h3>{AuthorName(ArticleDetails)}</h3>\r\n              <i>{AuthorPronouns(ArticleDetails)}</i>\r\n              <p>{AuthorSchool(ArticleDetails)}</p>\r\n            </div>\r\n            <div className=\"authorImg\">\r\n              <img \r\n              src={(typeof(AuthorImage(ArticleDetails)) === \"string\") ? AuthorImage(ArticleDetails) : AuthorImage(ArticleDetails).default} \r\n              alt={`Profile picture of ${AuthorName(ArticleDetails)}`}>\r\n            </img>\r\n            </div>\r\n          </a>\r\n\r\n          <Markdown className=\"content\">{ArticleMarkdown(ArticleDetails)}</Markdown>\r\n        </div>\r\n      </main>\r\n      */"],"names":["subjects","data","url","window","location","href","split","useState","ArticleDetails","setArticleDetails","articleId","slice","indexOf","length","articles","authors","useEffect","scrollTo","allMarkdownRemark","edges","forEach","info","index","node","frontmatter","type","push","userID","article","authorList","userIDs","ID","Article","i","slug","html","ArticleDetailsMapper","seo","_","title","ArticleTitle","image","ArticleImage","className","style","default","ArticleSubject","onClick","localStorage","setItem","result","AuthorNames","AuthorLinkTos","src","AuthorImages","alt","authorImages","ArticleDescription","AuthorPronouns","authorLinks","ArticleMarkdown","Video","URL","VideoURL","Title","VideoTitle","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","displayVideo"],"sourceRoot":""}